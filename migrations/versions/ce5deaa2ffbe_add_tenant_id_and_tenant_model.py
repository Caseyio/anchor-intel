"""Add tenant_id and Tenant model

Revision ID: ce5deaa2ffbe
Revises: 9a73bdb7631b
Create Date: 2025-07-25 10:41:11.400715

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ce5deaa2ffbe'
down_revision: Union[str, Sequence[str], None] = '9a73bdb7631b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('manager_closeouts')
    op.drop_index(op.f('idx_cashier_sessions_tenant'), table_name='cashier_sessions')
    op.drop_index(op.f('idx_inventory_tenant'), table_name='inventory_events')
    op.drop_index(op.f('idx_products_tenant'), table_name='products')
    op.drop_index(op.f('idx_returns_tenant'), table_name='returns')
    op.drop_index(op.f('idx_sales_tenant'), table_name='sales')
    op.alter_column('tenants', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.drop_index(op.f('idx_users_tenant'), table_name='users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_users_tenant'), 'users', ['tenant_id'], unique=False)
    op.alter_column('tenants', 'name',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.create_index(op.f('idx_sales_tenant'), 'sales', ['tenant_id'], unique=False)
    op.create_index(op.f('idx_returns_tenant'), 'returns', ['tenant_id'], unique=False)
    op.create_index(op.f('idx_products_tenant'), 'products', ['tenant_id'], unique=False)
    op.create_index(op.f('idx_inventory_tenant'), 'inventory_events', ['tenant_id'], unique=False)
    op.create_index(op.f('idx_cashier_sessions_tenant'), 'cashier_sessions', ['tenant_id'], unique=False)
    op.create_table('manager_closeouts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('manager_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('total_sales', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('total_cash', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('total_card', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('total_returns', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('cash_over_short_total', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('top_sellers', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('exceptions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('manager_signature', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], name=op.f('manager_closeouts_manager_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('manager_closeouts_pkey')),
    sa.UniqueConstraint('date', name=op.f('manager_closeouts_date_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
